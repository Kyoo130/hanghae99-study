{"ast":null,"code":"var _jsxFileName = \"/Users/kyoomac/MyDocument/GitHub/Kyoo99/02_week_deep/image-community/src/shared/Permit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { apiKey } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Permit = () => {\n  _s();\n\n  const is_login = useSelector(state => state.user.is_login);\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  if (is_session && is_login) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  return null;\n};\n\n_s(Permit, \"2VexXuUgB8o5Iyem/5fW9LFG6ys=\", false, function () {\n  return [useSelector];\n});\n\n_c = Permit;\nexport default Permit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Permit\");","map":{"version":3,"sources":["/Users/kyoomac/MyDocument/GitHub/Kyoo99/02_week_deep/image-community/src/shared/Permit.js"],"names":["React","useSelector","apiKey","Permit","is_login","state","user","_session_key","is_session","sessionStorage","getItem","props","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,YAAvB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,QAAvB,CAA5B;AAEA,QAAMG,YAAY,GAAI,qBAAoBL,MAAO,YAAjD;AACA,QAAMM,UAAU,GAAGC,cAAc,CAACC,OAAf,CAAuBH,YAAvB,IAAuC,IAAvC,GAA8C,KAAjE;;AAEA,MAAIC,UAAU,IAAIJ,QAAlB,EAA4B;AACxB,wBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,gBAAiBO,KAAK,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,SAAO,IAAP;AACH,CAVD;;GAAMT,M;UACeF,W;;;KADfE,M;AAYN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { apiKey } from \"./firebase\";\n\n\nconst Permit = () => {\n    const is_login = useSelector((state) => state.user.is_login);\n\n    const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n    const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n    if (is_session && is_login) {\n        return <React.Fragment>{props.children}</React.Fragment>\n    }\n    return null;\n}\n\nexport default Permit;"]},"metadata":{},"sourceType":"module"}
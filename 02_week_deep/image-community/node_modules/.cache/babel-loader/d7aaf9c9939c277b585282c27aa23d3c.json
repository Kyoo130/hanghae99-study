{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\";\nimport { FirebaseError } from \"@firebase/util\"; // actions\n\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\"; //action creators\n\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n}));\nconst setUser = createAction(SET_USER, user => ({\n  user\n})); // initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n};\nconst user_initial = {\n  user_name: 'kyoo'\n}; // middleware actions\n\nconst loginAction = user => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    console.log(history);\n    dispatch(setUser(user));\n    history.push('/');\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.createUserWithEmailAndPassword(id, pwd).then(user => {\n      console.log(user);\n      auth.currentUser.updateProfile({\n        displayName: user_name\n      }).then(() => {\n        dispatch(setUser({}));\n      });\n    }).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode, errorMessage);\n    });\n  };\n}; // reducer\n\n\nexport default handleActions({\n  [SET_USER]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user;\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator expot\n\nconst actionCreators = {\n  logOut,\n  getUser,\n  loginAction,\n  signupFB\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/kyoomac/MyDocument/GitHub/Kyoo99/02_week_deep/image-community/src/redux/modules/user.js"],"names":["createAction","handleActions","produce","setCookie","getCookie","deleteCookie","auth","FirebaseError","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","initialState","is_login","user_initial","user_name","loginAction","dispatch","getState","history","console","log","push","signupFB","id","pwd","createUserWithEmailAndPassword","then","currentUser","updateProfile","displayName","catch","error","errorCode","code","errorMessage","message","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\n\nimport { auth } from \"../../shared/firebase\"\nimport { FirebaseError } from \"@firebase/util\";\n\n\n// actions\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n\n//action creators\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n\n\n// initialState\nconst initialState = {\n    user: null,\n    is_login: false,\n};\n\nconst user_initial = {\n    user_name: 'kyoo',\n};\n\n// middleware actions\nconst loginAction = (user) => {\n    return function (dispatch, getState, { history }) {\n        console.log(history);\n        dispatch(setUser(user));\n        history.push('/');\n    };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n    return function (dispatch, getState, { history }) {\n        auth\n        .createUserWithEmailAndPassword(id, pwd)\n        .then((user) => {\n            console.log(user);\n\n            auth.currentUser.updateProfile({\n                displayName: user_name,\n            }).then(()=>{\n              dispatch(setUser({}));  \n            });\n        })\n        .catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n\n            console.log(errorCode, errorMessage);\n        })\n    }\n}\n\n// reducer\nexport default handleActions({\n    [SET_USER]: (state, action) => produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\")\n        draft.user = action.payload.user;\n        draft.is_login = true;\n    }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n\n    }),\n    [GET_USER]: (state, action) => produce(state, (draft) => { }),\n},\n    initialState\n);\n\n\n// action creator expot\nconst actionCreators = {\n    logOut,\n    getUser,\n    loginAction,\n    signupFB,\n};\n\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}